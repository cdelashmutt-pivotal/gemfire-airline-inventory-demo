<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:gfe="http://www.springframework.org/schema/gemfire"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire.xsd">

	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" />
	
	<gfe:client-cache id="cache" pdx-read-serialized="false"
		pool-name="pool" pdx-serializer-ref="pdxSerializer"  />

	<!--
	<gfe:pool id="pool" read-timeout="10000" subscription-enabled="true" subscription-redundancy="1">
		<gfe:locator host="${gemfire.locator.host}" port="${gemfire.locator.port}" />
	</gfe:pool>
-->

	<!-- To intercept the pool creation, and make sure we set things up properly, we have
	to resort to this "uglier" method of creating a pool bean -->
	<bean class="io.pivotal.pde.sample.airline.ui.support.SSLPoolFactoryBean" id="pool">
		<property name="readTimeout" value="10000" />
		<property name="subscriptionEnabled" value="true" />
		<property name="subscriptionRedundancy" value="1" />
		<property name="locators">
			<list>
				<bean class="org.springframework.data.gemfire.support.ConnectionEndpoint">
					<constructor-arg index="0" value="${gemfire.locator.host}" />
					<constructor-arg index="1" value="${gemfire.locator.port}" />
				</bean>
			</list>
		</property>
		<property name="trustedCert" value="${gemfire.locator.trustedCert:#{null}}" />
		<property name="privateKey" value="${gemfire.locator.privateKey:#{null}}" />
	</bean>

	<gfe:client-region id="airportRegion" name="Airport" 
		cache-ref="cache" pool-name="pool" shortcut="PROXY" />

	<gfe:client-region id="fareRegion" name="Fare" 
		cache-ref="cache" pool-name="pool" shortcut="PROXY" />

	<gfe:client-region id="flightRegion" name="Flight" 
		cache-ref="cache" pool-name="pool" shortcut="PROXY" />

	<gfe:client-region id="flightAvailabilityRegion" name="FlightAvailability" 
		cache-ref="cache" pool-name="pool" shortcut="PROXY" />
		
	<gfe:client-region id="revenueControlRegion" name="RevenueControl" 
		cache-ref="cache" pool-name="pool" shortcut="PROXY" />
		
	<bean id="pdxSerializer" class="org.apache.geode.pdx.ReflectionBasedAutoSerializer">
		<constructor-arg>
			<util:list value-type="java.lang.String">
				<value>io.pivotal.pde.sample.airline.domain.*</value>
			</util:list>
		</constructor-arg>
	</bean>
	

</beans>
